// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           String        @id @default(uuid())
  image        String?
  nome         String
  cpf          String        @unique
  email        String        @unique
  telefone     String
  senha        String
  isAdmin      Boolean       @default(false)
  createAt     DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Solicitacoes Solicitacao[]
  endereco     Endereco[]
  Mensagem     Mensagem[]
  Entidade     Entidade[]
}

model Endereco {
  id         String    @id @default(uuid())
  latitude   Decimal?
  longitude  Decimal?
  cep        String?
  bairro     String?
  rua        String
  numero     String?
  cidade     String
  uf         String    @db.VarChar(2)
  Entidade   Entidade? @relation(fields: [entidadeId], references: [id])
  Usuario    Usuario?  @relation(fields: [usuarioId], references: [id])
  usuarioId  String?
  entidadeId String?
}

model Entidade {
  id        String     @id @default(uuid())
  image     String?
  nome      String
  tipo      String
  telefone  String?
  detalhe   String?
  endereco  Endereco[]
  createAt  DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  usuario   Usuario    @relation(fields: [usuarioId], references: [id])
  usuarioId String
}

model Solicitacao {
  id         String     @id @default(uuid())
  tipo       String
  assunto    String
  descricao  String?
  respondida Boolean    @default(false)
  Usuario    Usuario    @relation(fields: [usuarioId], references: [id])
  usuarioId  String
  mensagens  Mensagem[]
  createAt   DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Mensagem {
  id            String       @id @default(uuid())
  descricao     String?
  audio         String[]
  Solicitacao   Solicitacao? @relation(fields: [solicitacaoId], references: [id])
  solicitacaoId String
  usuario       Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId     String
  createAt      DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}
